<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personnel.mapper.mybatis.EmployeesMapper">
    <resultMap id="BaseResultMap" type="com.personnel.domain.output.EmployeesOutput">
        <id column="ID" jdbcType="DECIMAL" property="id"/>
        <result column="ACTIVATION_ID" jdbcType="DECIMAL" property="activationId"/>
        <result column="ATTENDANCE_STATE" jdbcType="DECIMAL" property="attendanceState"/>
        <result column="BANK_CARD_NUMBER" jdbcType="VARCHAR" property="bankCardNumber"/>
        <result column="CITIZEN_CARDS" jdbcType="VARCHAR" property="citizenCards"/>
        <result column="CREATED_DATE_TIME" jdbcType="TIMESTAMP" property="createdDateTime"/>
        <result column="CREATED_USER_ID" jdbcType="DECIMAL" property="createdUserId"/>
        <result column="CREATED_USER_NAME" jdbcType="VARCHAR" property="createdUserName"/>
        <result column="DATE_BIRTH" jdbcType="TIMESTAMP" property="dateBirth"/>
        <result column="DEPARTURE_DATE_TIME" jdbcType="TIMESTAMP" property="departureDateTime"/>
        <result column="EMAIL" jdbcType="VARCHAR" property="email"/>
        <result column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo"/>
        <result column="ICON" jdbcType="VARCHAR" property="icon"/>
        <result column="ID_CARD" jdbcType="VARCHAR" property="idCard"/>
        <result column="INDUCTION_DATE_TIME" jdbcType="TIMESTAMP" property="inductionDateTime"/>
        <result column="AMPUTATED" jdbcType="DECIMAL" property="amputated"/>
        <result column="JOBS_ID" jdbcType="DECIMAL" property="jobsId"/>
        <result column="LAST_UPDATE_DATE_TIME" jdbcType="TIMESTAMP" property="lastUpdateDateTime"/>
        <result column="LAST_UPDATE_USER_ID" jdbcType="DECIMAL" property="lastUpdateUserId"/>
        <result column="LAST_UPDATE_USER_NAME" jdbcType="VARCHAR" property="lastUpdateUserName"/>
        <result column="MARITAL_STATUS" jdbcType="DECIMAL" property="maritalStatus"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="NATIONAL" jdbcType="VARCHAR" property="national"/>
        <result column="OFFICE" jdbcType="VARCHAR" property="office"/>
        <result column="OFFICE_PHONE" jdbcType="VARCHAR" property="officePhone"/>
        <result column="PARTY_MEMBER_STATE" jdbcType="DECIMAL" property="partyMemberState"/>
        <result column="PHONE_NUMBER" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="PLATE_NO" jdbcType="VARCHAR" property="plateNo"/>
        <result column="RECORD_OF_FORMAL_SCHOOLING" jdbcType="DECIMAL" property="recordOfFormalSchooling"/>
        <result column="SEX" jdbcType="DECIMAL" property="sex"/>
        <result column="USER_COMPILE" jdbcType="DECIMAL" property="userCompile"/>
        <result column="WORKING_STATE" jdbcType="DECIMAL" property="workingState"/>
        <result column="ORGANIZATION_ID" jdbcType="DECIMAL" property="organizationId"/>
        <result column="WINDOW_ID" jdbcType="DECIMAL" property="windowId"/>
        <result column="WINDOW_NO" jdbcType="DECIMAL" property="windowNo"/>
        <result column="JOBS_NAME" jdbcType="VARCHAR" property="jobsName"/>
        <result column="ORGANIZATION_NAME" jdbcType="VARCHAR" property="organizationName"/>
        <result column="WINDOW_NAME" jdbcType="VARCHAR" property="windowName"/>
        <result column="RESERVE_CADRES_STATE" jdbcType="DECIMAL" property="reserveCadresState"/>
        <result column="WINDOW_STATE" jdbcType="DECIMAL" property="windowState"/>
        <result column="party_Branch" jdbcType="DECIMAL" property="partyBranch"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="join_Party_Date" jdbcType="TIMESTAMP" property="joinPartyDate"/>
        <result column="citizen_Card_Physical_Address" jdbcType="VARCHAR" property="citizenCardPhysicalAddress"/>
    </resultMap>
    <sql id="Base_Column_List">
    ID, ACTIVATION_ID, ATTENDANCE_STATE, BANK_CARD_NUMBER, CITIZEN_CARDS, CREATED_DATE_TIME,
    CREATED_USER_ID, CREATED_USER_NAME, DATE_BIRTH, DEPARTURE_DATE_TIME, EMAIL, EMPLOYEE_NO,
    ICON, ID_CARD, INDUCTION_DATE_TIME, AMPUTATED, JOBS_ID, LAST_UPDATE_DATE_TIME, LAST_UPDATE_USER_ID,
    LAST_UPDATE_USER_NAME, MARITAL_STATUS, NAME, NATIONAL, OFFICE, OFFICE_PHONE, PARTY_MEMBER_STATE,
    PHONE_NUMBER, PLATE_NO, RECORD_OF_FORMAL_SCHOOLING, SEX, USER_COMPILE, WORKING_STATE,
    ORGANIZATION_ID, WINDOW_ID,RESERVE_CADRES_STATE,WINDOW_STATE,citizen_Card_Physical_Address
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
      employees.ACTIVATION_ID,
      employees.ATTENDANCE_STATE,
      employees.BANK_CARD_NUMBER,
      employees.CITIZEN_CARDS,
      employees.CREATED_DATE_TIME,
      employees.CREATED_USER_ID,
      employees.CREATED_USER_NAME,
      employees.DATE_BIRTH,
      employees.DEPARTURE_DATE_TIME,
      employees.EMAIL,
      employees.EMPLOYEE_NO,
      employees.ICON,
      employees.ID,
      employees.ID_CARD,
      employees.INDUCTION_DATE_TIME,
      employees.AMPUTATED,
      employees.JOBS_ID,
      employees.LAST_UPDATE_DATE_TIME,
      employees.LAST_UPDATE_USER_ID,
      employees.LAST_UPDATE_USER_NAME,
      employees.NAME,
      employees.NATIONAL,
      employees.MARITAL_STATUS,
      employees.OFFICE,
      employees.OFFICE_PHONE,
      employees.ORGANIZATION_ID,
      employees.PARTY_MEMBER_STATE,
      employees.PHONE_NUMBER,
      employees.PLATE_NO,
      employees.RECORD_OF_FORMAL_SCHOOLING,
      employees.SEX,
      employees.USER_COMPILE,
      employees.WINDOW_ID,
      employees.WINDOW_NO,
      employees.WORKING_STATE,
      employees.RESERVE_CADRES_STATE,
      employees.WINDOW_STATE,
      employees.party_Branch,
      employees.join_Party_Date,
      employees.citizen_Card_Physical_Address,
      window.NAME AS WINDOW_NAME,
      jobs.NAME AS JOBS_NAME,
      ORGANIZATION.NAME AS ORGANIZATION_NAME
      FROM
          EMPLOYEES employees
      LEFT JOIN WINDOW window ON window.ID = employees.WINDOW_ID
      LEFT JOIN JOBS jobs ON jobs.ID = employees.JOBS_ID
      AND jobs.AMPUTATED = 0
      LEFT JOIN ORGANIZATION ORGANIZATION ON ORGANIZATION . ID = employees.ORGANIZATION_ID
      AND ORGANIZATION.AMPUTATED = 0
    where employees.ID = #{id,jdbcType=DECIMAL}
    order by EMPLOYEE_NO
  </select>
    <select id="selectPage" resultMap="BaseResultMap" parameterType="com.common.model.PageData">
        SELECT
        employees.ACTIVATION_ID,
        employees.ATTENDANCE_STATE,
        employees.BANK_CARD_NUMBER,
        employees.CITIZEN_CARDS,
        employees.CREATED_DATE_TIME,
        employees.CREATED_USER_ID,
        employees.CREATED_USER_NAME,
        employees.DATE_BIRTH,
        employees.DEPARTURE_DATE_TIME,
        employees.EMAIL,
        employees.EMPLOYEE_NO,
        employees.ICON,
        employees.ID,
        employees.ID_CARD,
        employees.INDUCTION_DATE_TIME,
        employees.AMPUTATED,
        employees.JOBS_ID,
        employees.LAST_UPDATE_DATE_TIME,
        employees.LAST_UPDATE_USER_ID,
        employees.LAST_UPDATE_USER_NAME,
        employees.NAME,
        employees.NATIONAL,
        employees.MARITAL_STATUS,
        employees.OFFICE,
        employees.OFFICE_PHONE,
        employees.ORGANIZATION_ID,
        employees.PARTY_MEMBER_STATE,
        employees.PHONE_NUMBER,
        employees.PLATE_NO,
        employees.RECORD_OF_FORMAL_SCHOOLING,
        employees.SEX,
        employees.USER_COMPILE,
        employees.WINDOW_ID,
        employees.WINDOW_NO,
        employees.WORKING_STATE,
        employees.RESERVE_CADRES_STATE,
        employees.WINDOW_STATE,
        window.NAME AS WINDOW_NAME,
        jobs.NAME AS JOBS_NAME,
        ORGANIZATION.NAME AS ORGANIZATION_NAME
        FROM
        EMPLOYEES employees
        LEFT JOIN WINDOW window ON window.ID = employees.WINDOW_ID
        LEFT JOIN JOBS jobs ON jobs.ID = employees.JOBS_ID
        AND jobs.AMPUTATED = 0
        LEFT JOIN ORGANIZATION ORGANIZATION ON ORGANIZATION . ID = employees.ORGANIZATION_ID
        AND ORGANIZATION.AMPUTATED = 0
        WHERE employees.AMPUTATED=0
        <trim prefix="AND" suffixOverrides="and">
            <if test="name!=null and name !=''">employees.NAME like '%'||#{name}||'%' and</if>
            <if test="employeeNo!=null and employeeNo != ''">employees.EMPLOYEE_NO like '%'||#{employeeNo}||'%'and</if>
            <if test="organizationId != null and organizationId !=''">CONCAT(ORGANIZATION.PATH ,',') like '%'||#{organizationId}||',%'and
            </if>
            <if test="organizationPerId != null and organizationPerId !=''">CONCAT(ORGANIZATION.PATH ,',') like '%'||#{organizationPerId}||',%'and
            </if>
            <if test="organizationName!=null and organizationName != ''">ORGANIZATION.NAME like
                '%'||#{organizationName}||'%'and
            </if>
            <if test="jobsName!=null and jobsName != ''">jobs.NAME like '%'||#{jobsName}||'%'and</if>
            <if test="organId != null and organId !=''">CONCAT(ORGANIZATION.PATH ,',') like '%'||#{organId}||',%' and</if>
            <if test="phoneNumber != null and phoneNumber !=''">employees.PHONE_NUMBER like
                '%'||#{phoneNumber}||'%'and
            </if>
            <if test="employeeId != null and employeeId !=''"> employees.id=#{employeeId} and
            </if>
            <if test="nameOrPhone != null and nameOrPhone != ''">
                (employees.PHONE_NUMBER like '%'||#{nameOrPhone}||'%'
                or employees.EMPLOYEE_NO like '%'||#{nameOrPhone}||'%'
                or employees.NAME like '%'||#{nameOrPhone}||'%'
                or employees.PLATE_NO like '%'||#{nameOrPhone}||'%') and
            </if>

        </trim>
        order by EMPLOYEE_NO
    </select>

    <select id="selectPageListWithinAuthority" resultMap="BaseResultMap" parameterType="com.common.model.PageData">
        SELECT
        employees.ACTIVATION_ID,
        employees.ATTENDANCE_STATE,
        employees.BANK_CARD_NUMBER,
        employees.CITIZEN_CARDS,
        employees.CREATED_DATE_TIME,
        employees.CREATED_USER_ID,
        employees.CREATED_USER_NAME,
        employees.DATE_BIRTH,
        employees.DEPARTURE_DATE_TIME,
        employees.EMAIL,
        employees.EMPLOYEE_NO,
        employees.ICON,
        employees.ID,
        employees.ID_CARD,
        employees.INDUCTION_DATE_TIME,
        employees.AMPUTATED,
        employees.JOBS_ID,
        employees.LAST_UPDATE_DATE_TIME,
        employees.LAST_UPDATE_USER_ID,
        employees.LAST_UPDATE_USER_NAME,
        employees.NAME,
        employees.NATIONAL,
        employees.MARITAL_STATUS,
        employees.OFFICE,
        employees.OFFICE_PHONE,
        employees.ORGANIZATION_ID,
        employees.PARTY_MEMBER_STATE,
        employees.PHONE_NUMBER,
        employees.PLATE_NO,
        employees.RECORD_OF_FORMAL_SCHOOLING,
        employees.SEX,
        employees.USER_COMPILE,
        employees.WINDOW_ID,
        employees.WORKING_STATE,
        employees.RESERVE_CADRES_STATE,
        employees.WINDOW_STATE,
        window.NAME AS WINDOW_NAME,
        jobs.NAME AS JOBS_NAME,
        ORGANIZATION.NAME AS ORGANIZATION_NAME
        FROM
        EMPLOYEES employees
        LEFT JOIN WINDOW window ON window.ID = employees.WINDOW_ID
        LEFT JOIN JOBS jobs ON jobs.ID = employees.JOBS_ID
        AND jobs.AMPUTATED = 0
        LEFT JOIN ORGANIZATION ORGANIZATION ON ORGANIZATION . ID = employees.ORGANIZATION_ID
        AND ORGANIZATION.AMPUTATED = 0
        WHERE employees.AMPUTATED=0
        <if test="orgId!=null or employeeId!=null">
        AND (EXISTS (
        SELECT
        ORGANIZATION.ID
        FROM
        USER_ROLE
        INNER JOIN ROLE_ORGAN ON USER_ROLE.ROLE_ID = ROLE_ORGAN.ROLE_ID
        WHERE
        ORGANIZATION.id = ROLE_ORGAN.ORGAN_ID
        AND USER_ROLE.USER_ID = #{userId}
        <if test="orgId!=null">
            UNION ALL
            SELECT
            organ.ID
            FROM
            ORGANIZATION organ
            WHERE
            (organ.LINKED_ID =#{orgId} or organ.id = #{orgId})
            AND ORGANIZATION.id = organ.id
            AND organ.AMPUTATED = 0
        </if>
        )
        <if test="employeeId!=null">
            or employees. id = #{employeeId}
        </if>
        )
        </if>
        <trim prefix="AND" suffixOverrides="and">
            <if test="name!=null and name !=''">employees.NAME like '%'||#{name}||'%' and</if>
            <if test="employeeNo!=null and employeeNo != ''">employees.EMPLOYEE_NO like '%'||#{employeeNo}||'%'and</if>
            <if test="organizationId != null and organizationId !=''">CONCAT(ORGANIZATION.PATH ,',') like '%'||#{organizationId}||',%'and
            </if>
            <if test="organizationPerId != null and organizationPerId !=''">CONCAT(ORGANIZATION.PATH ,',') like '%'||#{organizationPerId}||',%'and
            </if>
            <if test="organizationName!=null and organizationName != ''">ORGANIZATION.NAME like
                '%'||#{organizationName}||'%'and
            </if>
            <if test="jobsName!=null and jobsName != ''">jobs.NAME like '%'||#{jobsName}||'%'and</if>
            <if test="state!=null and state != ''">employees.WORKING_STATE = #{state} and</if>
            <if test="organId != null and organId !=''">CONCAT(ORGANIZATION.PATH ,',') like '%'||#{organId}||',%' and</if>
            <if test="phoneNumber != null and phoneNumber !=''">employees.PHONE_NUMBER like
                '%'||#{phoneNumber}||'%'and
            </if>
            <if test="nameOrPhone != null and nameOrPhone != ''">
                (employees.PHONE_NUMBER like '%'||#{nameOrPhone}||'%'
                or employees.EMPLOYEE_NO like '%'||#{nameOrPhone}||'%'
                or employees.NAME like '%'||#{nameOrPhone}||'%'
                or employees.PLATE_NO like '%'||#{nameOrPhone}||'%') and
            </if>

        </trim>
        order by EMPLOYEE_NO
    </select>


    <select id="selectByPath" resultMap="BaseResultMap" parameterType="com.common.model.PageData">
        SELECT
        employees.ACTIVATION_ID,
        employees.ATTENDANCE_STATE,
        employees.BANK_CARD_NUMBER,
        employees.CITIZEN_CARDS,
        employees.CREATED_DATE_TIME,
        employees.CREATED_USER_ID,
        employees.CREATED_USER_NAME,
        employees.DATE_BIRTH,
        employees.DEPARTURE_DATE_TIME,
        employees.EMAIL,
        employees.EMPLOYEE_NO,
        employees.ICON,
        employees.ID,
        employees.ID_CARD,
        employees.INDUCTION_DATE_TIME,
        employees.AMPUTATED,
        employees.JOBS_ID,
        employees.LAST_UPDATE_DATE_TIME,
        employees.LAST_UPDATE_USER_ID,
        employees.LAST_UPDATE_USER_NAME,
        employees.NAME,
        employees.NATIONAL,
        employees.MARITAL_STATUS,
        employees.OFFICE,
        employees.OFFICE_PHONE,
        employees.ORGANIZATION_ID,
        employees.PARTY_MEMBER_STATE,
        employees.PHONE_NUMBER,
        employees.PLATE_NO,
        employees.RECORD_OF_FORMAL_SCHOOLING,
        employees.SEX,
        employees.USER_COMPILE,
        employees.WINDOW_ID,
        employees.WINDOW_NO,
        employees.WORKING_STATE,
        employees.RESERVE_CADRES_STATE,
        employees.WINDOW_STATE,
        window.NAME AS WINDOW_NAME,
        jobs.NAME AS JOBS_NAME,
        ORGANIZATION.NAME AS ORGANIZATION_NAME
        FROM
        EMPLOYEES employees
        LEFT JOIN WINDOW window ON window.ID = employees.WINDOW_ID
        LEFT JOIN JOBS jobs ON jobs.ID = employees.JOBS_ID
        AND jobs.AMPUTATED = 0
        LEFT JOIN ORGANIZATION ORGANIZATION ON ORGANIZATION . ID = employees.ORGANIZATION_ID
        AND ORGANIZATION.AMPUTATED = 0
        WHERE employees.AMPUTATED=0
        <trim prefix="AND" suffixOverrides="and">
            <if test="name!=null and name !=''">employees.NAME like '%'||#{name}||'%' and</if>
            <if test="employeeNo!=null and employeeNo != ''">employees.EMPLOYEE_NO like '%'||#{employeeNo}||'%'and</if>
            <if test="path!=null and  path!= ''">CONCAT(ORGANIZATION.PATH ,',') like '%'||#{path}||'%'and</if>
            <if test="jobsName!=null and jobsName != ''">jobs.NAME like '%'||#{jobsName}||'%'and</if>
            <if test="organId != null and organId !=''">employees.ORGANIZATION_ID = #{organId,jdbcType=DECIMAL} and</if>
        </trim>
        ORDER BY EMPLOYEE_NO
    </select>

    <select id="selectByOrgId" resultMap="BaseResultMap" parameterType="com.common.model.PageData">
        SELECT
        employees.ACTIVATION_ID,
        employees.ATTENDANCE_STATE,
        employees.BANK_CARD_NUMBER,
        employees.CITIZEN_CARDS,
        employees.CREATED_DATE_TIME,
        employees.CREATED_USER_ID,
        employees.CREATED_USER_NAME,
        employees.DATE_BIRTH,
        employees.DEPARTURE_DATE_TIME,
        employees.EMAIL,
        employees.EMPLOYEE_NO,
        employees.ICON,
        employees.ID,
        employees.ID_CARD,
        employees.INDUCTION_DATE_TIME,
        employees.AMPUTATED,
        employees.JOBS_ID,
        employees.LAST_UPDATE_DATE_TIME,
        employees.LAST_UPDATE_USER_ID,
        employees.LAST_UPDATE_USER_NAME,
        employees.NAME,
        employees.NATIONAL,
        employees.MARITAL_STATUS,
        employees.OFFICE,
        employees.OFFICE_PHONE,
        employees.ORGANIZATION_ID,
        employees.PARTY_MEMBER_STATE,
        employees.PHONE_NUMBER,
        employees.PLATE_NO,
        employees.RECORD_OF_FORMAL_SCHOOLING,
        employees.SEX,
        employees.USER_COMPILE,
        employees.WINDOW_ID,
        employees.WORKING_STATE,
        employees.RESERVE_CADRES_STATE,
        employees.WINDOW_STATE,
        window.NAME AS WINDOW_NAME,
        jobs.NAME AS JOBS_NAME,
        ORGANIZATION.NAME AS ORGANIZATION_NAME
        FROM
        EMPLOYEES employees
        LEFT JOIN WINDOW window ON window.ID = employees.WINDOW_ID
        LEFT JOIN JOBS jobs ON jobs.ID = employees.JOBS_ID
        AND jobs.AMPUTATED = 0
        LEFT JOIN ORGANIZATION ORGANIZATION ON ORGANIZATION . ID = employees.ORGANIZATION_ID
        AND ORGANIZATION.AMPUTATED = 0
        WHERE employees.AMPUTATED=0
        and employees.WORKING_STATE = 1
        <trim prefix="AND" suffixOverrides="and">
            <if test="name!=null and name !=''">employees.NAME like '%'||#{name}||'%' and</if>
            <if test="employeeNo!=null and employeeNo != ''">employees.EMPLOYEE_NO like '%'||#{employeeNo}||'%'and</if>
            <if test="jobsName!=null and jobsName != ''">jobs.NAME like '%'||#{jobsName}||'%'and</if>
            <if test="organizationId != null and organizationId !=''">employees.ORGANIZATION_ID = #{organizationId,jdbcType=DECIMAL} and</if>
        </trim>
        ORDER BY EMPLOYEE_NO
    </select>

    <select id="selectCountName" parameterType="string" resultType="int">
    select count(1)
    from EMPLOYEES employees
    where NAME=#{name,jdbcType=VARCHAR}
    ORDER BY EMPLOYEE_NO
  </select>


    <select id="selectEmployeeIdByEmployeeName" parameterType="String" resultType="int">
    select ID
    from EMPLOYEES employees
    where NAME=#{name,jdbcType=VARCHAR}
    ORDER BY EMPLOYEE_NO
  </select>

    <select id="selectMaxNo" resultType="String">
    SELECT max(EMPLOYEE_NO) from EMPLOYEES where 1=1
    <if test="small">
       and EMPLOYEE_NO>#{small}
    </if>
    <if test="big">
        and EMPLOYEE_NO &lt; #{big}
    </if>
  </select>

    <select id="selectAll" resultMap="BaseResultMap" parameterType="com.common.model.PageData">
        SELECT
        employees.ACTIVATION_ID,
        employees.ATTENDANCE_STATE,
        employees.BANK_CARD_NUMBER,
        employees.CITIZEN_CARDS,
        employees.CREATED_DATE_TIME,
        employees.CREATED_USER_ID,
        employees.CREATED_USER_NAME,
        employees.DATE_BIRTH,
        employees.DEPARTURE_DATE_TIME,
        employees.EMAIL,
        employees.EMPLOYEE_NO,
        employees.ICON,
        employees.ID,
        employees.ID_CARD,
        employees.INDUCTION_DATE_TIME,
        employees.AMPUTATED,
        employees.JOBS_ID,
        employees.LAST_UPDATE_DATE_TIME,
        employees.LAST_UPDATE_USER_ID,
        employees.LAST_UPDATE_USER_NAME,
        employees.NAME,
        employees.NATIONAL,
        employees.MARITAL_STATUS,
        employees.OFFICE,
        employees.OFFICE_PHONE,
        employees.ORGANIZATION_ID,
        employees.PARTY_MEMBER_STATE,
        employees.PHONE_NUMBER,
        employees.PLATE_NO,
        employees.RECORD_OF_FORMAL_SCHOOLING,
        employees.SEX,
        employees.USER_COMPILE,
        employees.WINDOW_ID,
        employees.WINDOW_NO,
        employees.WORKING_STATE,
        employees.RESERVE_CADRES_STATE,
        employees.WINDOW_STATE,
        employees.citizen_Card_Physical_Address,
        window.NAME AS WINDOW_NAME,
        jobs.NAME AS JOBS_NAME,
        ORGANIZATION.NAME AS ORGANIZATION_NAME
        FROM
        EMPLOYEES employees
        LEFT JOIN WINDOW window ON window.ID = employees.WINDOW_ID
        LEFT JOIN JOBS jobs ON jobs.ID = employees.JOBS_ID
        AND jobs.AMPUTATED = 0
        LEFT JOIN ORGANIZATION ORGANIZATION ON ORGANIZATION . ID = employees.ORGANIZATION_ID
        AND ORGANIZATION.AMPUTATED = 0
        WHERE employees.AMPUTATED=0
        <if test="state != null and state != '' ">and employees.WORKING_STATE = #{state}</if>
        <if test="orgId!=null or employeeId!=null">
            AND (EXISTS (
            SELECT
            ORGANIZATION.ID
            FROM
            USER_ROLE
            INNER JOIN ROLE_ORGAN ON USER_ROLE.ROLE_ID = ROLE_ORGAN.ROLE_ID
            WHERE
            ORGANIZATION.id = ROLE_ORGAN.ORGAN_ID
            AND USER_ROLE.USER_ID = #{userId}
            <if test="orgId!=null">
                UNION ALL
                SELECT
                organ.ID
                FROM
                ORGANIZATION organ
                WHERE
                (organ.LINKED_ID =#{orgId} or organ.id = #{orgId})
                AND ORGANIZATION.id = organ.id
                AND organ.AMPUTATED = 0
            </if>
            )
            <if test="employeeId!=null">
                or employees.id = #{employeeId}
            </if>
            )
        </if>
        <trim prefix="AND" suffixOverrides="and">
            <if test="name!=null and name !=''">employees.NAME like '%'||#{name}||'%' and</if>
            <if test="employeeNo!=null and employeeNo != ''">employees.EMPLOYEE_NO like '%'||#{employeeNo}||'%'and</if>
            <if test="organizationName!=null and organizationName != ''">ORGANIZATION.NAME like
                '%'||#{organizationName}||'%'and
            </if>
            <if test="organId != null and organId !=''">CONCAT(ORGANIZATION.PATH ,',') like '%'||#{organId}||',%'and
            </if>
            <if test="organizationId != null and organizationId !=''">CONCAT(ORGANIZATION.PATH ,',') like '%'||#{organizationId}||',%'and
            </if>
            <if test="jobsName!=null and jobsName != ''">jobs.NAME like '%'||#{jobsName}||'%'and</if>
        </trim>

        order by EMPLOYEE_NO
    </select>

    <select id="selectAllAndOrgPath" resultMap="BaseResultMap" parameterType="com.common.model.PageData">
        SELECT
        employees.ID,
        ORGANIZATION.path AS path
        FROM
        EMPLOYEES employees
        LEFT JOIN ORGANIZATION ORGANIZATION ON ORGANIZATION . ID = employees.ORGANIZATION_ID
        AND ORGANIZATION.AMPUTATED = 0
        WHERE
        (employees.AMPUTATED=0 and WORKING_STATE = 1 and employees.INDUCTION_DATE_TIME &lt;TO_DATE (#{inTime},'YYYY-MM-DD'))
        or
        (WORKING_STATE = 3 and employees.DEPARTURE_DATE_TIME >TO_DATE (#{leaveTime},'YYYY-MM-DD'))
        order by EMPLOYEE_NO
  </select>

    <select id="selectByIdCard" resultMap="BaseResultMap" parameterType="com.common.model.PageData">
        SELECT
        employees.ID
        FROM
        EMPLOYEES employees
        WHERE  employees.AMPUTATED=0 and employees.ID_CARD=#{idCard,jdbcType=VARCHAR}
        and employees.WORKING_STATE!=3
        order by EMPLOYEE_NO
    </select>

    <select id="selectByWindowId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        employees.ACTIVATION_ID,
        employees.ATTENDANCE_STATE,
        employees.BANK_CARD_NUMBER,
        employees.CITIZEN_CARDS,
        employees.CREATED_DATE_TIME,
        employees.CREATED_USER_ID,
        employees.CREATED_USER_NAME,
        employees.DATE_BIRTH,
        employees.DEPARTURE_DATE_TIME,
        employees.EMAIL,
        employees.EMPLOYEE_NO,
        employees.ICON,
        employees.ID,
        employees.ID_CARD,
        employees.INDUCTION_DATE_TIME,
        employees.AMPUTATED,
        employees.JOBS_ID,
        employees.LAST_UPDATE_DATE_TIME,
        employees.LAST_UPDATE_USER_ID,
        employees.LAST_UPDATE_USER_NAME,
        employees.NAME,
        employees.NATIONAL,
        employees.MARITAL_STATUS,
        employees.OFFICE,
        employees.OFFICE_PHONE,
        employees.ORGANIZATION_ID,
        employees.PARTY_MEMBER_STATE,
        employees.PHONE_NUMBER,
        employees.PLATE_NO,
        employees.RECORD_OF_FORMAL_SCHOOLING,
        employees.SEX,
        employees.USER_COMPILE,
        employees.WINDOW_ID,
        employees.WORKING_STATE,
        employees.RESERVE_CADRES_STATE,
        employees.WINDOW_STATE
        FROM
        EMPLOYEES employees
        WHERE  employees.AMPUTATED=0 and employees.WINDOW_ID = #{id}
        order by EMPLOYEE_NO
    </select>

    <select id="selectByPlateNo" resultMap="BaseResultMap" parameterType="com.common.model.PageData">
        SELECT
        employees.ACTIVATION_ID,
        employees.ATTENDANCE_STATE,
        employees.BANK_CARD_NUMBER,
        employees.CITIZEN_CARDS,
        employees.CREATED_DATE_TIME,
        employees.CREATED_USER_ID,
        employees.CREATED_USER_NAME,
        employees.DATE_BIRTH,
        employees.DEPARTURE_DATE_TIME,
        employees.EMAIL,
        employees.EMPLOYEE_NO,
        employees.ICON,
        employees.ID,
        employees.ID_CARD,
        employees.INDUCTION_DATE_TIME,
        employees.AMPUTATED,
        employees.JOBS_ID,
        employees.LAST_UPDATE_DATE_TIME,
        employees.LAST_UPDATE_USER_ID,
        employees.LAST_UPDATE_USER_NAME,
        employees.NAME,
        employees.NATIONAL,
        employees.MARITAL_STATUS,
        employees.OFFICE,
        employees.OFFICE_PHONE,
        employees.ORGANIZATION_ID,
        employees.PARTY_MEMBER_STATE,
        employees.PHONE_NUMBER,
        employees.PLATE_NO,
        employees.RECORD_OF_FORMAL_SCHOOLING,
        employees.SEX,
        employees.USER_COMPILE,
        employees.WINDOW_ID,
        employees.WORKING_STATE,
        employees.RESERVE_CADRES_STATE,
        employees.WINDOW_STATE,
        window.NAME AS WINDOW_NAME,
        jobs.NAME AS JOBS_NAME,
        ORGANIZATION.NAME AS ORGANIZATION_NAME
        FROM
        EMPLOYEES employees
        LEFT JOIN WINDOW window ON window.ID = employees.WINDOW_ID
        LEFT JOIN JOBS jobs ON jobs.ID = employees.JOBS_ID
        AND jobs.AMPUTATED = 0
        LEFT JOIN ORGANIZATION ORGANIZATION ON ORGANIZATION . ID = employees.ORGANIZATION_ID
        AND ORGANIZATION.AMPUTATED = 0
        WHERE employees.AMPUTATED=0
        <trim prefix="AND" suffixOverrides="and">
            <if test="plateNo!=null and plateNo !=''">employees.PLATE_NO like '%'||#{plateNo}||'%' and</if>
            <if test="id!=null and id !=''">employees.id != #{id,jdbcType=DECIMAL}</if>
        </trim>
        order by EMPLOYEE_NO
    </select>

    <select id="selectByCitizenCards" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        EMPLOYEES
        WHERE AMPUTATED=0
        and
        CITIZEN_CARDS=#{citizenCards,jdbcType=VARCHAR}
        and rownum=1
        order by EMPLOYEE_NO
    </select>

    <select id="getByOrganCode" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        employees.ID,
        employees.NAME,
        employees.PHONE_NUMBER

        FROM
	    EMPLOYEES employees
        WHERE
	      employees ."ID" IN (
		SELECT
			o.DEPARTMENTAL_MANAGER
		FROM
			"ORGANIZATION" o
		LEFT JOIN "ORGANIZATION" o_1 ON o_1.ORGANIZATION_CODE = o.ORGANIZATION_CODE
		WHERE
			o_1. ID = #{organId,jdbcType=DECIMAL}
	)
    </select>


    <select id="selectByWindowState" parameterType="integer" resultMap="BaseResultMap">
        select * from EMPLOYEES
        where WINDOW_STATE = #{windowState,jdbcType=DECIMAL}
        and ORGANIZATION_ID
        in (select ID from ORGANIZATION
        START WITH ID = 161
        connect by prior ID=PARENT_ID ) and AMPUTATED=0
    </select>

    <select id="selectAllFoodEmp" resultMap="BaseResultMap">
        select * from EMPLOYEES
        where AMPUTATED=0
    </select>

    <update id="updateOrgId" parameterType="com.common.model.PageData">
        update EMPLOYEES
        set ORGANIZATION_ID = #{newOrgId,jdbcType=DECIMAL}
        where ORGANIZATION_ID = #{oldOrgId,jdbcType=DECIMAL}
    </update>

    <select id="selectUserIdByEmpId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select u.id from USERS u
        left join EMPLOYEES e on e.id = u.EMPLOYEE_ID
        where e.id = #{empId,jdbcType=DECIMAL}
    </select>

    <select id="selectByPhoneNumber" resultMap="BaseResultMap" parameterType="com.common.model.PageData">
        SELECT
        employees.ID
        FROM
        EMPLOYEES employees
        WHERE  employees.AMPUTATED=0 and employees.PHONE_NUMBER=#{phoneNumber,jdbcType=VARCHAR} and employees.WORKING_STATE !=3
        order by EMPLOYEE_NO
    </select>

    <select id="selectByIdCards" resultMap="BaseResultMap" parameterType="com.common.model.PageData">
        SELECT
        employees.ID
        FROM
        EMPLOYEES employees
        WHERE  employees.AMPUTATED=0 and employees.ID_CARD=#{idCard,jdbcType=VARCHAR} and employees.WORKING_STATE!=3
        order by EMPLOYEE_NO
    </select>

    <select id="findNoAccount"  resultMap="BaseResultMap">
        SELECT E.*
        FROM EMPLOYEES E
        WHERE E.AMPUTATED=0
          AND (
            SELECT COUNT(1)
            FROM USERS UU WHERE UU.EMPLOYEE_ID=E.ID
          )=0
        ORDER BY E.ORGANIZATION_ID
    </select>
</mapper>
