package com.personnel.service;import com.common.model.PageData;import com.common.response.ResponseResult;import com.common.utils.HttpRequestUtil;import com.google.common.collect.Lists;import com.personnel.core.base.BaseMapper;import com.personnel.core.base.BaseService;import com.personnel.core.base.MybatisBaseMapper;import com.personnel.mapper.jpa.DeptRepository;import com.personnel.mapper.mybatis.DeptMapper;import com.personnel.model.Dept;import com.personnel.model.Employees;import com.personnel.model.Organization;import org.hibernate.id.IntegralDataTypeHolder;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.MethodArgumentNotValidException;import java.beans.IntrospectionException;import java.lang.reflect.InvocationTargetException;import java.util.*;/** * @author: Administrator */@Servicepublic class DeptService extends BaseService<Dept,Dept, Integer> {  @Autowired  private DeptMapper deptMapper;  @Autowired  private DeptRepository deptRepository;  @Autowired  private DeptService deptService;  @Value("${hik.getDeptInfos_URL}")  private String getDeptInfos_URL;  @Override  public BaseMapper<Dept, Integer> getMapper() {    return null;  }  @Override  public MybatisBaseMapper<Dept> getMybatisBaseMapper() {    return null;  }//  @Transactional//  public void addDept() {//    Map<String,Object> map = getHikDept(1);//    Integer total = (Integer) map.get("total");//    Integer pages = total%10==0?total/10:total/10+1;//    if(pages>=2){//      for(int i = 2;i<=pages;i++){//        getHikDept(i);//      }//    }//  }  public Map<String,Object> addDept() throws InvocationTargetException, IntrospectionException, MethodArgumentNotValidException, IllegalAccessException {    PageData pageData = new PageData();    pageData.put("pageNo",1);    pageData.put("pageSize",1000);    ResponseResult responseResult = HttpRequestUtil.sendPostRequest(getDeptInfos_URL,pageData);    Map<String, Object> dataList = (Map<String, Object>) responseResult.getData();    addDeptInfos(dataList);    return dataList;  }  public List addDeptInfos(Map<String,Object> dataList) throws InvocationTargetException, IntrospectionException, MethodArgumentNotValidException, IllegalAccessException {    List<Dept> deptList = Lists.newArrayList();    var values = (ArrayList<Object>) dataList.get("list");    for (int i = 0; i < values.size(); i++) {      Map<String, Object> deptMap = (Map<String, Object>) values.get(i);      Dept dept = new Dept();      String deptUuid = (String) deptMap.get("deptUuid");      String deptNo = (String) deptMap.get("deptNo");      String deptName = (String) deptMap.get("deptName");      String deptPinyin = (String) deptMap.get("deptPinyin");      String deptPath = (String) deptMap.get("deptPath");      String parentDeptUuid = (String) deptMap.get("parentDeptUuid");      Long updTime = (Long) deptMap.get("updTime");      dept.setDeptUuid(deptUuid);      dept.setDeptNo(deptNo);      dept.setDeptName(deptName);      dept.setDeptPinyin(deptPinyin);      dept.setDeptPath(deptPath);      dept.setParentDeptUuid(parentDeptUuid);      dept.setUpdTime(updTime);      deptRepository.save(dept);      deptList.add(dept);//      deptService.update(dept.getId(),dept);//      if (deptList != null || deptList.size() > 0) {//        deptRepository.saveAll(deptList);//      }    }    return deptList;//    if(! updateDept(deptList)){//      return "更新失败";//    }//    return "更新成功";//  }////  @Transactional//  public boolean updateDept(List<Dept> deptList) throws InvocationTargetException, IntrospectionException, MethodArgumentNotValidException, IllegalAccessException {//    for(Dept dept:deptList){//      if(this.update(dept.getId(),dept)<=0){//        return false;//      }//    }//    return true;//  }  }}